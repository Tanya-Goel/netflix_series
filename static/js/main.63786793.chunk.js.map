{"version":3,"sources":["Component/Cards.js","Component/SData.jsx","App.js","serviceWorker.js","index.js"],"names":["Cards","props","className","src","imgsrc","alt","title","sname","href","links","target","SData","id","App","console","log","map","val","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"qOAqBeA,G,UAnBD,SAACC,GACX,OAEI,yBAAKC,UAAU,SAEX,yBAAKA,UAAU,QACX,yBAAKC,IAAKF,EAAMG,OAAQC,IAAI,iBAAiBH,UAAU,cACvD,yBAAKA,UAAU,cACX,0BAAMA,UAAU,kBAAkBD,EAAMK,OACxC,wBAAIJ,UAAU,eAAeD,EAAMM,OACnC,uBAAGC,KAAMP,EAAMQ,MAAOC,OAAO,UACzB,4BAAQR,UAAU,OAAlB,mBC0BTS,EAvCH,CACR,CACIC,GAAG,EACHR,OAAO,gGACPE,MAAM,4BACNC,MAAM,OACNE,MAAM,6CAEV,CACIG,GAAG,EACHR,OAAO,+EACPE,MAAM,4BACNC,MAAM,iBACNE,MAAM,6CAEV,CACIG,GAAG,EACHR,OAAO,6HACPE,MAAM,4BACNC,MAAM,gBACNE,MAAM,6CAEV,CACIG,GAAG,EACHR,OAAO,0EACPE,MAAM,4BACNC,MAAM,SACNE,MAAM,6CAEV,CACIG,GAAG,EACHR,OAAO,2GACPE,MAAM,4BACNC,MAAM,kBACNE,MAAM,8CCPCI,MArBf,WAEE,OADAC,QAAQC,IAAIJ,GAEV,6BACE,+DACA,+BAFF,IAGKA,EAAMK,KAAI,SAACC,GACZ,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAIL,GACTR,OAAQa,EAAIb,OACZE,MAAOW,EAAIX,MACXC,MAAOU,EAAIV,MACXE,MAAOQ,EAAIR,WAVnB,MCGgBU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMC,c","file":"static/js/main.63786793.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Cards = (props) => {\n    return (\n\n        <div className=\"cards\">\n\n            <div className=\"card\">\n                <img src={props.imgsrc} alt=\"pic is loading\" className=\"card__img\" />\n                <div className=\"card__info\">\n                    <span className=\"card__category\">{props.title}</span>\n                    <h3 className=\"card__title\">{props.sname}</h3>\n                    <a href={props.links} target=\"_blank\">\n                        <button className=\"btn\">Watch now</button>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Cards;","const SData=[\n    {\n        id:1,\n        imgsrc:\"https://specials-images.forbesimg.com/imageserve/5f09c45da759d50006fa2945/960x0.jpg?fit:scale\",\n        title:\"A netflix original series\",\n        sname:\"DARK\",\n        links:\"https://www.netflix.com/in/title/80100172\",\n    },\n    {\n        id:2,\n        imgsrc:\"https://upload.wikimedia.org/wikipedia/commons/3/38/Stranger_Things_logo.png\",\n        title:\"A netflix original series\",\n        sname:\"Strange Things\",\n        links:\"https://www.netflix.com/in/title/80057281\" \n    },\n    {\n        id:3,\n        imgsrc:\"https://decider.com/wp-content/uploads/2020/04/extracurricular-netflix-stream-it-or-skip-it.jpg?quality=90&strip=all&w=618\",\n        title:\"A netflix original series\",\n        sname:\"Little Things\",\n        links:\"https://www.netflix.com/in/title/81011159\"\n    },\n    {\n        id:4,\n        imgsrc:\"https://theannapurnaexpress.com/uploads/media/betaal_20200602203709.jpg\",\n        title:\"A netflix original series\",\n        sname:\"Beetal\",\n        links:\"https://www.netflix.com/in/title/81061789\"\n    },\n    {\n        id:5,\n        imgsrc:\"https://www.whats-on-netflix.com/wp-content/uploads/2019/04/My-First-First-Love-Netflix-K-Drama.jpg.webp\",\n        title:\"A netflix original series\",\n        sname:\"My first-2 love\",\n        links:\"https://www.netflix.com/in/title/81026700\"\n    },\n  \n];\n\nexport default SData;","import React from 'react';\nimport './App.css';\nimport Cards from \"../src/Component/Cards\";\nimport SData from \"./Component/SData\";\n\n\nfunction App() {\n  console.log(SData);\n  return (\n    <div>\n      <h1>Welcome to top 5 netflix series</h1>\n      <faVs/>;\n        {SData.map((val) => { \n        return (\n          <Cards\n            key={val.id}\n            imgsrc={val.imgsrc}\n            title={val.title}\n            sname={val.sname}\n            links={val.links}\n          />);\n\n      })}; \n      \n\n    </div>);\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}